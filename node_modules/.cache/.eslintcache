[{"/home/uzair/weather-app/src/index.js":"1","/home/uzair/weather-app/src/App.js":"2","/home/uzair/weather-app/src/reportWebVitals.js":"3","/home/uzair/weather-app/src/components/Weather.jsx":"4","/home/uzair/weather-app/src/components/SearchForm.jsx":"5","/home/uzair/weather-app/src/components/WeatherDetails.jsx":"6"},{"size":535,"mtime":1728996089384,"results":"7","hashOfConfig":"8"},{"size":167,"mtime":1728996089383,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1728996089384,"results":"10","hashOfConfig":"8"},{"size":3707,"mtime":1728996089384,"results":"11","hashOfConfig":"8"},{"size":472,"mtime":1728996089384,"results":"12","hashOfConfig":"8"},{"size":2365,"mtime":1728996089384,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1583aap",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/uzair/weather-app/src/index.js",[],[],"/home/uzair/weather-app/src/App.js",[],[],"/home/uzair/weather-app/src/reportWebVitals.js",[],[],"/home/uzair/weather-app/src/components/Weather.jsx",["33","34"],[],"import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport WeatherDetails from \"./WeatherDetails\";\nimport \"./weather.css\";\n\nconst Weather = () => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  //upadated the time rendering the every sec\n  useEffect(() => {\n    const timerID = setInterval(() => tick(), 1000);\n\n    return () => clearInterval(timerID);\n  }, []);\n\n  const tick = () => {\n    setCurrentTime(new Date());\n  };\n\n  const handleInputChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    handleSearch(\"Sukkur\");\n  }, []);\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    handleSearch(searchQuery);\n    setSearchQuery(\"\");\n  };\n\n  // fetch the current Weather Using openweathermap Api\n  const handleSearch = (cityName) => {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=f9ad0d563e1d98c23693e24c1ac143bf`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.cod === \"404\") {\n          setError(\"City not found\");\n          setWeatherData(null);\n        } else {\n          setWeatherData(data);\n          setError(\"\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(\"An error occurred\");\n        setWeatherData(null);\n      });\n  };\n\n  // displaying the data from an API\n  return (\n    <div>\n      <div className=\"name-container\">\n        <div className=\"weathr-app\">\n          <h1>Weather App</h1>\n          <a className=\"logo\" href=\"https://github.com/mhg007\" target=\"_blank\">\n          <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              class=\"bi bi-github\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\" />\n            </svg>\n\n          </a>\n      \n        </div>\n      </div>\n      <div className=\"weather-container\">\n        <div className=\"weather-subcontainer\">\n          <SearchForm\n            searchQuery={searchQuery}\n            handleInputChange={handleInputChange}\n            handleFormSubmit={handleFormSubmit}\n          />\n\n          {error ? (\n            <p className=\"errors-styles\">{error}</p>\n          ) : (\n            weatherData && (\n              <WeatherDetails\n                temperature={`${Math.round(weatherData.main.temp - 273.15)}Â°C`}\n                weatherCondition={weatherData.weather[0].description}\n                weatherIcon={weatherData.weather[0].icon}\n                cityName={weatherData.name}\n                countryName={weatherData.sys.country}\n                humidity={weatherData.main.humidity}\n                wind={weatherData.wind.speed}\n                pressure={weatherData.main.pressure}\n                visibility={weatherData.visibility}\n              />\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n","/home/uzair/weather-app/src/components/SearchForm.jsx",[],[],"/home/uzair/weather-app/src/components/WeatherDetails.jsx",[],[],{"ruleId":"35","severity":1,"message":"36","line":7,"column":10,"nodeType":"37","messageId":"38","endLine":7,"endColumn":21},{"ruleId":"39","severity":1,"message":"40","line":65,"column":11,"nodeType":"41","messageId":"42","endLine":65,"endColumn":80,"fix":"43"},"no-unused-vars","'currentTime' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"44","text":"45"},[1768,1768]," rel=\"noreferrer\""]